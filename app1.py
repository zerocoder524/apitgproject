import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.utils.markdown import hbold, hcode

from config import TOKEN
import random
import requests

# API –∫–ª—é—á –¥–ª—è OpenWeatherMap
OWM_API_KEY = 'WEATHER_API_KEY'

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message(Command('photo'))
async def photo(message: Message):
  photo_list = [
    'https://img.freepik.com/free-photo/beautiful-kitten-with-colorful-clouds_23-2150752964.jpg',
    'https://img.freepik.com/free-photo/adorable-looking-kitten-with-yarn_23-2150886286.jpg',
    'https://img.freepik.com/free-photo/close-up-adorable-kitten-near-yarn_23-2150782235.jpg',
    'https://i.pinimg.com/236x/ef/bc/73/efbc73a4552228b0af41f3675104eaf3.jpg'
  ]

  rand_photo = random.choice(photo_list)
  await message.answer_photo(photo=rand_photo, caption='–≠—Ç–æ —Å—É–ø–µ—Ä –∫—Ä—É—Ç–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞')


@dp.message(F.photo)
async def react_photo(message: Message):
  reaction_list = ['–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!', '–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ', '–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ']
  rand_answ = random.choice(reaction_list)
  await message.answer(rand_answ)


@dp.message(F.text == "—á—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?")
async def aitext(message: Message):
  await message.answer('–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ —Å—á–∏—Ç–∞—é—Ç—Å—è –ø—Ä–µ—Ä–æ–≥–∞—Ç–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫–∞; –Ω–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω, –æ—Å–æ–±–µ–Ω–Ω–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º')


@dp.message(Command('help'))
async def help(message:Message):
  await message.answer("–≠—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n/start\n/help\n/weather [–≥–æ—Ä–æ–¥]")


@dp.message(CommandStart)
async def start(message: Message):
  await message.answer('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç!')


@dp.message(Command('weather'))
async def weather(message: Message):
  city = message.text.split(" ")[1]
  try:
    response = requests.get(f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={OWM_API_KEY}&units=metric")
    response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ HTTP
    data = response.json()

    temp = data['main']['temp']
    feels_like = data['main']['feels_like']
    description = data['weather'][0]['description']

    await message.answer(
      f"–ü–æ–≥–æ–¥–∞ –≤ {hbold(city)}:\n"
      f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
      f"‰ΩìÊÑüÊ∏©Â∫¶: {feels_like}¬∞C\n"
      f"‚òÅÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n"
      f"üåê –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://openweathermap.org/city/{data['id']}"
    )
  except requests.exceptions.RequestException as e:
    await message.answer(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ: {e}")


async def main():
  await dp.start_polling(bot)


if __name__ == '__main__':
  asyncio.run(main())
